---
version: '3'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3.8.0'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  broker:
    image: 'bitnami/kafka:3.1.1'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://broker:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    ports:
      - "8082:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - broker

  db:
    image: postgres
    volumes:
      - ./tmp/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password

  oauth:
    build: auth
    command: ['rails', 'server', '-p', '3000', '-b', '0.0.0.0']
    volumes:
      - ./auth:/oauth
    ports:
      - "3000:3000"
    depends_on:
      - db
      - broker
    environment:
      RAILS_ENV: 'development'
      DATABASE_URL: 'postgres://postgres:password@db:5432/postgres'
      KAFKA_URL: 'kafka://broker:9092'
      BROKER_ADAPTER: 'kafka'

  tasks:
    build: tasks
    env_file: ./tasks/.env
    volumes:
      - ./tasks:/app
    ports:
      - "3010:3000"
      - "${CAPYBARA_SERVER_PORT:-3434}:${CAPYBARA_SERVER_PORT:-3434}"
    environment:
      CAPYBARA_SERVER_PORT: "${CAPYBARA_SERVER_PORT:-3434}"
      CAPYBARA_SERVER_HOST: "${CAPYBARA_SERVER_HOST:-0.0.0.0}"
    # To communicate with the host via "host.docker.internal"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - db
      - broker

  adminer:
    image: adminer
    ports:
      - ${ADMINER_PORT:-8080}:8080
